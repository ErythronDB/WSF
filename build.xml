<project name="WSF" default="Installation" basedir=".">

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo   Properties   oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->


  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Dependencies  oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

    <import file="${projectsDir}/FgpUtil/build.xml" />

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo    Checkout    oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <target name="WSF-ChildCheckout">
    <available file="${projectsDir}/FgpUtil" type="dir"  property="FgpUtil.present" />
    <antcall target="FgpUtil-Checkout"/>
  </target>

  <target name="FgpUtil-Checkout" unless="FgpUtil.present">
    <ant target="defaultProjectCheckout" inheritAll="false">
      <property name="svnurl" value="https://www.cbil.upenn.edu/svn/gus/FgpUtil"/>
      <property name="project" value="FgpUtil"/>
      <property name="version" value="WDK_version_1-28"/>
    </ant>
  </target>
  
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo    Update    oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <target name="WSF-ChildUpdate">
    <ant target="defaultProjectUpdate">
      <property name="project" value="FgpUtil"/>
    </ant>
  </target>

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Installation  oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="WSF-Installation" depends="FgpUtil-Installation,
                                           WSF-MavenInstallation,
                                           WSF/Client-Installation,
                                           WSF/Plugin-Installation,
                                           WSF/Core-Installation">

    <ant target="defaultProjectInstall">
      <property name="project" value="WSF"/>
    </ant>

  </target>
  

 <!-- ooooooooooooooooooooooo  Install Components  ooooooooooooooooooooooo -->

  <target name="WSF-MavenInstallation">
    <ant target="mavenCleanInstall">
      <property name="project" value="WSF"/>
    </ant>
    <ant target="deployMavenArtifacts">
      <property name="project" value="WSF"/>
      <property name="component" value="Client"/>
    </ant>
    <ant target="deployMavenArtifacts">
      <property name="project" value="WSF"/>
      <property name="component" value="Plugin"/>
    </ant>
    <ant target="deployMavenArtifacts">
      <property name="project" value="WSF"/>
      <property name="component" value="Core"/>
    </ant>
  </target>

  <target name="WSF/Plugin-Installation" depends="WSF/Client-Installation">

    <ant target="defaultComponentInstall">
      <property name="project" value="WSF"/>
      <property name="component" value="Plugin"/>
    </ant>

  </target>

  <target name="WSF/Core-Installation" depends="WSF/Plugin-Installation">

    <ant target="defaultComponentInstall">
      <property name="project" value="WSF"/>
      <property name="component" value="Core"/>
    </ant>

  </target>

  <target name="WSF/Client-Installation">

    <!-- install WSF-Client.jar
    <ant target="defaultComponentInstall">
      <property name="project" value="WSF"/>
      <property name="component" value="Client"/>
    </ant>
    -->
  </target>
 
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooo  Web Installation  oooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->


  <target name="WSF-WebInstallation" depends="verifyWebPropFile,
                                              WSF-Installation,
                                              WSF/Core-WebInstallation">

    <available file="${webappTargetDir}/WEB-INF/wsf-config" type="dir" property="wsf-config.exist" />
    <available file="${webappTargetDir}/WEB-INF/lib" type="dir" property="lib.exist" />
    <available file="${webappTargetDir}/WEB-INF/web.xml" property="web.xml.exist" />
        
    <!-- create necessary directory structure -->
    <mkdir dir="${webappTargetDir}/WEB-INF/"/>
    
    <antcall target="createLibLink" />
    <antcall target="createConfigLink" />
<!--
    <antcall target="copyWebXml" />
-->

    <!-- copy the log4j.properties to webapp's classes, if necessary -->
    <available file="${webappTargetDir}/WEB-INF/classes/log4j.xml" property="log4j.webconfig.exist" />
<!--
    <antcall target="copyLog4jWebconfig" />
-->

    <!-- use default context.xml, if it does not exist -->
    <available file="${targetDir}/config/context.xml" property="context.xml.exist" />
    <antcall target="copyContextXml" />

  </target>


  <target name="WSF/Core-WebInstallation" depends="WSF/Core-Installation">

    <ant target="defaultWebComponentInstall">
      <property name="project" value="WSF"/>
      <property name="component" value="Core"/>
    </ant>

  </target>


    <!-- oooooooooooooooooooooooo  Web Installation  oooooooooooooooooooooooo -->


    <target name="verifyWebPropFile">
    
        <fail unless="webappTargetDir">The 'webappTargetDir' is missing from the web property file. Example: /usr/local/tomcat/webapps/axis</fail>
    
    </target>

   
  <target name="createLibLink" unless="lib.exist">
    <symlink link="${webappTargetDir}/WEB-INF/lib" resource="${targetDir}/lib/java"/>
  </target>

 
  <target name="createConfigLink" unless="wsf-config.exist">
    <symlink link="${webappTargetDir}/WEB-INF/wsf-config" resource="${targetDir}/config"/>
  </target>

 
  <target name="copyWebXml" unless="web.xml.exist">
    <copy file="${webappTargetDir}/WEB-INF/wsf-web.xml" toFile="${webappTargetDir}/WEB-INF/web.xml"/>
  </target>
 
 
  <target name="copyLog4jWebconfig" unless="log4j.webconfig.exist">
    <copy file="${targetDir}/config/log4j.xml" toDir="${webappTargetDir}/WEB-INF/classes"/>
  </target>
 
  <target name="copyContextXml" unless="context.xml.exist">
    <filter token="targetDir" value="${targetDir}"/>
    <filter token="webappTargetDir" value="${webappTargetDir}"/>
    <copy file="${targetDir}/config/wsf-context.xml.sample" 
          toFile="${targetDir}/config/wsf-context.xml"
          filtering="true"/>
  </target>

  
  

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooo  Release  ooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="WSF-Release">
    
    <echo>"WSF-Release" is not supported at this moment.</echo>

  </target>  

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Distributable  ooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="WSF-Distributable">

    <echo>"WSF-Distributable" is not supported at this moment.</echo>

  </target>  

</project>
