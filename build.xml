<project name="WSF" default="Installation" basedir=".">

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo   Properties   oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->


  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Dependencies  oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo    Checkout    oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <target name="WSF-ChildCheckout" />
  
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo    Update    oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <target name="WSF-ChildUpdate" />

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Installation  oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="WSF-Installation" depends="WSF/Service-Installation,
                                           WSF/Plugin-Installation,
                                           WSF/Client-Installation">

    <mkdir dir="${targetDir}/wsf-lib/java"/>

    <ant target="defaultProjectInstall"/>

    <move file="${targetDir}/lib/java/WSF-Service.jar" todir="${targetDir}/wsf-lib/java" />
    <move file="${targetDir}/lib/java/WSF-Plugin.jar" todir="${targetDir}/wsf-lib/java" />

  </target>


 <!-- ooooooooooooooooooooooo  Install Components  ooooooooooooooooooooooo -->

  <target name="WSF/Service-Installation" depends="WSF/Plugin-Installation">

    <ant target="defaultComponentInstall">
      <property name="project" value="WSF"/>
      <property name="component" value="Service"/>
    </ant>

  </target>

  <target name="WSF/Plugin-Installation">
    <ant target="defaultComponentInstall">
      <property name="project" value="WSF"/>
      <property name="component" value="Plugin"/>
    </ant>
  </target>

  <target name="WSF/Client-Installation" depends="WSF/Service-Installation">
    <condition property="webserviceBaseUrl" value="http://localhost:8080/axis">
      <not>
        <isset property="webserviceBaseUrl" />
      </not>
    </condition>
    
    <delete dir="../WSF/Client" quiet="true" />
    <mkdir dir="../WSF/Client/src/java"/>
    <mkdir dir="../WSF/Client/lib/java"/>
    <mkdir dir="../WSF/Client/config"/>
    <copy todir="../WSF/Client/lib/java">
      <fileset dir="../WSF/Service/lib/java"/>
    </copy>
    <copy file="${targetDir}/lib/java/WSF-Service.jar" todir="../WSF/Client/lib/java" />
    <copy file="${targetDir}/lib/java/WSF-Plugin.jar" todir="../WSF/Client/lib/java" />

    <path id="classpath">
      <pathelement path="${classpath}" />
      <fileset dir="../WSF/Client/lib/java">
        <include name="**/*.jar"/>
      </fileset>
    </path>
	
    <echo>Creating WSDL file.</echo>
        
    <java classname="org.apache.axis.wsdl.Java2WSDL" fork="true">
      <classpath refid="classpath" />
      <arg line="-o ../WSF/Client/config/WsfService.wsdl" />
      <arg line="-l${webserviceBaseUrl}/services/WsfService" />
      <arg line="-n .service.wsf.gusdb.org" />
      <arg line="-porg.gusdb.wsf.service urn:service.wsf.gusdb.org" />
      <arg line="org.gusdb.wsf.service.WsfService" />
    </java>
          
    <echo>Generating client stub and deployment files from WSDL.</echo>
        
    <java classname="org.apache.axis.wsdl.WSDL2Java" fork="true">
      <classpath refid="classpath" />
      <arg line="-o ../WSF/Client/src/java" />
      <arg line="-d Session" />
      <arg line="-c org.gusdb.wsf.service.WsfServiceImp" />
      <arg line="-s" />
      <arg line="../WSF/Client/config/WsfService.wsdl" />
    </java>
        
    <delete file="../WSF/Client/src/java/org/gusdb/wsf/service/WsfServiceImp.java" />
    <move file="../WSF/Client/src/java/org/gusdb/wsf/service/deploy.wsdd" tofile="../WSF/Client/config/wsfService-deploy.wsdd" />
    <move file="../WSF/Client/src/java/org/gusdb/wsf/service/undeploy.wsdd" tofile="../WSF/Client/config/wsfService-undeploy.wsdd" />
              
    <echo>Modifying the className definition in deploy.wsdd with WsfDeployHelper</echo>

    <java classname="org.gusdb.wsf.util.WsfDeployHelper" fork="true">
      <classpath refid="classpath" />
      <arg line="changeClass ../WSF/Client/config/wsfService-deploy.wsdd org.gusdb.wsf.service.WsfService" />
    </java>

    <ant target="defaultComponentInstall">
      <property name="project" value="WSF"/>
      <property name="component" value="Client"/>
    </ant>

  </target>

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooo  Web Installation  oooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="WSF-WebInstallation" depends="WSF-Installation">

    <available file="${webappTargetDir}/WEB-INF/wsf-config" type="dir" property="wsf-config.exist" />
    <available file="${targetDir}/config/wsfService-undeploy.wsdd" property="undeploy.exist" />
        
    <antcall target="WSF-WebUninstallation" />
    <antcall target="createConfigLink" />
    
    <copy todir="${webappTargetDir}/WEB-INF/lib">
      <fileset dir="${targetDir}/wsf-lib/java" />
    </copy>

    <java classname="org.apache.axis.client.AdminClient" 
          fork="true">
      <classpath refid="classpath" />
      <arg line="-l${webserviceBaseUrl}/servlet/AxisServlet" />
      <arg line="${targetDir}/config/wsfService-deploy.wsdd" />
    </java>

  </target>

  <target name="createConfigLink" unless="wsf-config.exist">
    <symlink link="${webappTargetDir}/WEB-INF/wsf-config" resource="${targetDir}/config"/>
  </target>
  
  <!-- ooooooooooooooooooooo  Install web components  ooooooooooooooooooooo -->
  
  <target name="WSF-WebUninstallation" if="undeploy.exist">
  
    <echo>Unregistering web service from Axis. Tomcat/Axis must be up and running.</echo>
            
    <java classname="org.apache.axis.client.AdminClient" fork="true">
      <classpath refid="classpath" />
      <arg line="-l${webserviceBaseUrl}/servlet/AxisServlet" />
      <arg line="${targetDir}/config/wsfService-undeploy.wsdd" />
    </java>
  
  </target>
  

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooo  Release  ooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="WSF-Release">
    
    <echo>"WSF-Release" is not supported at this moment.</echo>

  </target>  

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Distributable  ooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="WSF-Distributable">

    <echo>"WSF-Distributable" is not supported at this moment.</echo>

  </target>  

</project>


